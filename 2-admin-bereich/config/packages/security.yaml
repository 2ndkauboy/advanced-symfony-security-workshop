security:
    encoders:
        # Our user class and the algorithm we'll use to encode passwords
        # 'auto' means to let Symfony choose the best possible password hasher (Argon2 or Bcrypt)
        # https://symfony.com/doc/current/security.html#c-encoding-the-user-s-password
        App\Entity\User: 'auto'

    providers:
        # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
        # In this example, users are stored via Doctrine in the database
        # To see the users at src/App/DataFixtures/ORM/LoadFixtures.php
        # To load users from somewhere else: https://symfony.com/doc/current/security/custom_provider.html
        database_users:
            entity: { class: App\Entity\User, property: username }

    # https://symfony.com/doc/current/security.html#initial-security-yml-setup-authentication
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            # Catch all routes
            pattern: ^/
            # Allow general anonymous access
            anonymous: true
            # form_login und logout Konfiguration
            form_login:
                check_path: security_login
                login_path: security_login
                csrf_token_generator: security.csrf.token_manager
                default_target_path: blog_index
            logout:
                path: security_logout
                target: homepage
    access_control:
        # require ROLE_ADMIN to create new posts
        - { path: '^/(%app_locales%)/admin/post/new', roles: ROLE_ADMIN }
        # require ROLE_USER for access to backend
        - { path: '^/(%app_locales%)/admin', roles: ROLE_USER }
